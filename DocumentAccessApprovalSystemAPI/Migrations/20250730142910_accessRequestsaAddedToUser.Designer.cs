// <auto-generated />
using System;
using DocumentAccessApprovalSystemAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocumentAccessApprovalSystemAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250730142910_accessRequestsaAddedToUser")]
    partial class accessRequestsaAddedToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.18");

            modelBuilder.Entity("DocumentAccessApprovalSystemAPI.Entities.AccessRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DecisionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DecisionId")
                        .IsUnique();

                    b.HasIndex("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("AccessRequests", (string)null);
                });

            modelBuilder.Entity("DocumentAccessApprovalSystemAPI.Entities.Decision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Decisions", (string)null);
                });

            modelBuilder.Entity("DocumentAccessApprovalSystemAPI.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileName = "File1.pdf"
                        },
                        new
                        {
                            Id = 2,
                            FileName = "File2.pdf"
                        },
                        new
                        {
                            Id = 3,
                            FileName = "File3.pdf"
                        });
                });

            modelBuilder.Entity("DocumentAccessApprovalSystemAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Pawel_user@wp.pl",
                            Name = "Pawel_user",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "gawel_approver@wp.pl",
                            Name = "Gawel_approver",
                            Role = 2
                        });
                });

            modelBuilder.Entity("DocumentAccessApprovalSystemAPI.Entities.AccessRequest", b =>
                {
                    b.HasOne("DocumentAccessApprovalSystemAPI.Entities.Decision", "Decision")
                        .WithOne("AccessRequest")
                        .HasForeignKey("DocumentAccessApprovalSystemAPI.Entities.AccessRequest", "DecisionId");

                    b.HasOne("DocumentAccessApprovalSystemAPI.Entities.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentAccessApprovalSystemAPI.Entities.User", "User")
                        .WithMany("AccessRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Decision");

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DocumentAccessApprovalSystemAPI.Entities.Decision", b =>
                {
                    b.Navigation("AccessRequest")
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentAccessApprovalSystemAPI.Entities.User", b =>
                {
                    b.Navigation("AccessRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
